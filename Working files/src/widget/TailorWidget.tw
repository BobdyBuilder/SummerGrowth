:: TailorWidget [widget nobr] {"position":"2700,1525","size":"100,100"}
<<widget "TailorWidget">>

<<set _outfitClothesIds to setup.getOutfitClothesArray().map(clothes => clothes.id)>> /* IDs of currently wearing clothes */
<<set _wardrobeTemp to $wardrobe.filter(clothes => !_outfitClothesIds.includes(clothes.id))>> /* clothes in wardrobe not wearing */
<<set _newClothes to JSON.parse(JSON.stringify(_wardrobeTemp))>>

<<set _getAllReadableSizes to function (clothes) {
    const sizes = {};
    for (let i = 0; i < setup.sizeDatabase.length; i++) {
        sizes[setup.getReadableFitFromSize(i, clothes.slot, clothes.tolerance)] = i;
    }
    return sizes;
}>>

<table id="store">
  <tr>
    <th>Name</th>
	<th>Current size</th>
	<th>New size</th>
	<th>Price</th>
	<th>Have tailored</th>
  </tr>

<<for _iTailoredList to 0; _iTailoredList < _wardrobeTemp.length; _iTailoredList ++>>
<<capture _iTailoredList>>

<tr class="row" @data-num="_iTailoredList">
  <td><<print _wardrobeTemp[_iTailoredList].name>></td>
  <td>
    <<liveblock>>
  	    <<print setup.getReadableFitFromClothing(_wardrobeTemp[_iTailoredList])>>
  	<</liveblock>>
  </td>
  <td>
	<<listbox "_newClothes[_iTailoredList].size" autoselect>>
	<<optionsfrom _getAllReadableSizes(_newClothes[_iTailoredList])>>
	<</listbox>>
  </td>
  <td>
      <<set _newClothes[_iTailoredList].price to 0>> /* initialize to 0 price */
      <<liveblock>>
          <span class="price">
                <<print '$' + _newClothes[_iTailoredList].price>>
          </span>
      <</liveblock>>
	</td>
	<td class="action">
	    <<liveblock>>
            <<if $money < _newClothes[_iTailoredList].price>>
                You can't afford this
            <<elseif _newClothes[_iTailoredList].size === _wardrobeTemp[_iTailoredList].size>>
                Select a new size.
            <<else>>
                <<linkreplace "get tailored - 00:10 ðŸ•›">>
                    <<set $simonOpinion += 1>>
                    Tailored!
                    <<if _wardrobeTemp[_iTailoredList].bonuses.find(bonus => bonus.name === setup.clothingBonuses.Tailored.name) == null>>
                        <<set _wardrobeTemp[_iTailoredList].bonuses.push(setup.clothingBonuses.Tailored)>>
                    <</if>>
                    <<set _wardrobeTemp[_iTailoredList].size to _newClothes[_iTailoredList].size>>
                    <<set $money -= _newClothes[_iTailoredList].price>>
                    <<set _newClothes[_iTailoredList].price to 0>> /* reset tailoring price */
                    <<addMinutes 5>>
                    <<update>>
                <</linkreplace>>
            <</if>>
        <</liveblock>>
  </td>
</tr>
<</capture>>
<</for>>
</table>

<<timed 0s>><<script>>
    $('.macro-listbox#listbox--newclothes-itailoredlistsize').on('change', function () {
        const selectedSize = parseInt($(this).children(':selected').val());
        const row = $(this).parents('.row');
    
        row.find('.price').fadeOut(250, function () {
            const rowIndex = parseInt(row.attr('data-num'));
            const sizeMod = State.temporary.wardrobeTemp[rowIndex].size;
            const sizeDifference = Math.abs(selectedSize - sizeMod);
    
            const price = State.temporary.newClothes[rowIndex].size === State.temporary.wardrobeTemp[rowIndex].size ?
                0 :
                Math.round((20 * (0.5 * (State.temporary.wardrobeTemp[rowIndex].size + 1))) * (1 + ((sizeDifference / 3) * (sizeDifference / 3))));
            State.temporary.newClothes[rowIndex].price = price;
            $(this).fadeIn(250);
    
            row.trigger(':liveupdate'); /* update current row only */
        });
    });
<</script>><</timed>>
<</widget>>

